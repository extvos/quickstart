# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package

on:
  push:
    branches:
      - develop
      - release

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:

    - name: Checkout repository and submodules
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Set up JDK 8
      uses: actions/setup-java@v2
      with:
        java-version: '8'
        distribution: 'temurin'
        java-package: 'jdk'
        server-id: ossrh # Value of the distributionManagement/repository/id field of the pom.xml
        server-username: ${{ secrets.OSSRH_USERNAME }}
        server-password: ${{ secrets.OSSRH_PASSWORD }}
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Cache Maven packages
      uses: actions/cache@v2.1.4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build with Maven
      run: |
        mvn -Dhttp.keepAlive=false \
            -Dmaven.wagon.http.pool=false \
            -Dmaven.wagon.httpconnectionManager.ttlSeconds=120 \
            -B package --file pom.xml

    - name: Publish to GitHub Packages Apache Maven
      env:
        GITHUB_TOKEN: ${{ github.token }}
        OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
      run: |
          mvn -Dhttp.keepAlive=false \
              -Dmaven.wagon.http.pool=false \
              -Dmaven.wagon.httpconnectionManager.ttlSeconds=120 \
              deploy
