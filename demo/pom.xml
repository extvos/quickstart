<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.4.4</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <groupId>io.github.extvos.app</groupId>
    <artifactId>quick-demo-app</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>quick-demo</name>
    <description>Demo App</description>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <maven.deploy.skip>true</maven.deploy.skip>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>mybatis-plus-boot-starter</artifactId>
            <version>3.4.2</version>
        </dependency>
        <!--        <dependency>-->
        <!--            <groupId>org.mybatis.spring.boot</groupId>-->
        <!--            <artifactId>mybatis-spring-boot-starter</artifactId>-->
        <!--            <version>1.3.2</version>-->
        <!--        </dependency>-->
        <!-- https://mvnrepository.com/artifact/com.alibaba/druid-spring-boot-starter -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid-spring-boot-starter</artifactId>
            <version>1.2.6</version>
        </dependency>


        <!-- swagger -->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>2.9.2</version>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>2.9.2</version>
        </dependency>
        <!--        <dependency>-->
        <!--            <groupId>io.springfox</groupId>-->
        <!--            <artifactId>springfox-spring-web</artifactId>-->
        <!--            <version>2.9.2</version>-->
        <!--            <scope>compile</scope>-->
        <!--        </dependency>-->
        <dependency>
            <groupId>com.github.xiaoymin</groupId>
            <artifactId>knife4j-spring-boot-starter</artifactId>
            <version>2.0.8</version>
        </dependency>

        <dependency>
            <groupId>com.google.auto.service</groupId>
            <artifactId>auto-service</artifactId>
            <version>1.0-rc2</version>
            <optional>true</optional>
        </dependency>

<!--        <dependency>-->
<!--            <groupId>org.springframework.boot</groupId>-->
<!--            <artifactId>spring-boot-starter-cache</artifactId>-->
<!--        </dependency>-->
<!--        <dependency>-->
<!--            <groupId>org.springframework.boot</groupId>-->
<!--            <artifactId>spring-boot-starter-actuator</artifactId>-->
<!--        </dependency>-->
        <!-- mqtt -->

<!--        <dependency>-->
<!--            <groupId>org.springframework.boot</groupId>-->
<!--            <artifactId>spring-boot-starter-integration</artifactId>-->
<!--        </dependency>-->

        <dependency>
            <groupId>io.minio</groupId>
            <artifactId>minio</artifactId>
            <version>8.2.1</version>
        </dependency>

        <!-- quick modules -->
        <dependency>
            <groupId>io.github.extvos</groupId>
            <artifactId>quick-builtin-version</artifactId>
            <version>1.0.0-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>io.github.extvos</groupId>
            <artifactId>quick-builtin-geo</artifactId>
            <version>1.0.0-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>io.github.extvos</groupId>
            <artifactId>quick-builtin-upload</artifactId>
            <version>1.0.0-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>io.github.extvos</groupId>
            <artifactId>quick-builtin-quartz</artifactId>
            <version>1.0.0-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>io.github.extvos</groupId>
            <artifactId>quick-lib-mqtt</artifactId>
            <version>1.0.0-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>io.github.extvos</groupId>
            <artifactId>quick-lib-redis</artifactId>
            <version>1.0.0-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>io.github.extvos</groupId>
            <artifactId>quick-builtin-async</artifactId>
            <version>1.0.0-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>io.github.extvos</groupId>
            <artifactId>quick-lib-restlet</artifactId>
            <version>1.0.0-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>io.github.extvos</groupId>
            <artifactId>quick-lib-common</artifactId>
            <version>1.0.0-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>io.github.extvos</groupId>
            <artifactId>quick-lib-logging</artifactId>
            <version>1.0.0-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>io.github.extvos</groupId>
            <artifactId>quick-auth-builtin</artifactId>
            <version>1.0.0-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>io.github.extvos</groupId>
            <artifactId>quick-auth-oauth2</artifactId>
            <version>1.0.0-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>io.github.extvos</groupId>
            <artifactId>quick-auth-base</artifactId>
            <version>1.0.0-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.20</version>
            <scope>provided</scope>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <!--代码混淆-->
<!--            <plugin>-->
<!--                <groupId>com.github.wvengen</groupId>-->
<!--                <artifactId>proguard-maven-plugin</artifactId>-->
<!--                <version>2.3.1</version>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <phase>package</phase>-->
<!--                        <goals>-->
<!--                            <goal>proguard</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--                <configuration>-->
<!--                    <proguardVersion>6.0.3</proguardVersion>-->
<!--                    <injar>${project.build.finalName}.jar</injar>-->
<!--                    &lt;!&ndash; <injar>classes</injar> &ndash;&gt;-->
<!--                    <outjar>${project.build.finalName}.jar</outjar>-->
<!--                    <obfuscate>true</obfuscate>-->
<!--                    <options>-->
<!--                        &lt;!&ndash;  ##默认是开启的，这里关闭shrink，即不删除没有使用的类/成员&ndash;&gt;-->
<!--                        <option>-dontshrink</option>-->
<!--                        &lt;!&ndash; ##默认是开启的，这里关闭字节码级别的优化&ndash;&gt;-->
<!--                        <option>-dontoptimize</option>-->
<!--                        &lt;!&ndash;##对于类成员的命名的混淆采取唯一策略&ndash;&gt;-->
<!--                        <option>-useuniqueclassmembernames</option>-->
<!--                        &lt;!&ndash;- 混淆类名之后，对使用Class.forName('className')之类的地方进行相应替代&ndash;&gt;-->
<!--                        <option>-adaptclassstrings</option>-->
<!--                        <option>-ignorewarnings</option>-->
<!--                        &lt;!&ndash; 混淆时不生成大小写混合的类名，默认是可以大小写混合&ndash;&gt;-->
<!--                        <option>-dontusemixedcaseclassnames</option>-->
<!--                        &lt;!&ndash; This option will replace all strings in reflections method invocations with new class names.-->
<!--                             For example, invokes Class.forName('className')&ndash;&gt;-->
<!--                        &lt;!&ndash; <option>-adaptclassstrings</option> &ndash;&gt;-->
<!--                        &lt;!&ndash; This option will save all original annotations and etc. Otherwise all we be removed from files.&ndash;&gt;-->
<!--                        &lt;!&ndash; 不混淆所有特殊的类&ndash;&gt;-->
<!--                        <option>-keepattributes Exceptions,InnerClasses,Signature,Deprecated,-->
<!--                            SourceFile,LineNumberTable,*Annotation*,EnclosingMethod-->
<!--                        </option>-->
<!--                        &lt;!&ndash; This option will save all original names in interfaces (without obfuscate).&ndash;&gt;-->
<!--                        <option>-keepnames interface **</option>-->
<!--                        &lt;!&ndash; This option will save all original methods parameters in files defined in -keep sections,-->
<!--                             otherwise all parameter names will be obfuscate.&ndash;&gt;-->
<!--                        <option>-keepparameternames</option>-->
<!--                        &lt;!&ndash; <option>-libraryjars **</option> &ndash;&gt;-->
<!--                        &lt;!&ndash; This option will save all original class files (without obfuscate) but obfuscate all in domain package.&ndash;&gt;-->
<!--                        &lt;!&ndash;<option>-keep class !com.slm.proguard.example.spring.boot.domain.** { *; }</option>&ndash;&gt;-->
<!--                        <option>-keep class !com.dsys.project.** { *; }</option>-->
<!--                        <option>-keep class com.dsys.project.App { *; }</option>-->
<!--                        <option>-keep class com.dsys.project.config.** { *; }</option>-->
<!--                        &lt;!&ndash;保留不然Mybatis报错&ndash;&gt;-->
<!--                        <option>-keep class com.dsys.project.entity.** { *; }</option>-->
<!--                        <option>-keep class com.dsys.project.utils.PageRes { *; }</option>-->
<!--                        <option>-keep class com.dsys.project.controller.** { *; }</option>-->
<!--                        <option>-keep class com.dsys.project.mp.controller.** { *; }</option>-->
<!--                        <option>-keep class com.dsys.project.mp.config.** { *; }</option>-->
<!--                        <option>-keep class com.dsys.project.dto.** { *; }</option>-->
<!--                        <option>-keep class * implements java.io.Serializable</option>-->
<!--                        &lt;!&ndash; This option will save all original class files (without obfuscate) in service package&ndash;&gt;-->
<!--                        &lt;!&ndash;<option>-keep class com.slm.proguard.example.spring.boot.service { *; }</option>&ndash;&gt;-->
<!--                        &lt;!&ndash; This option will save all original interfaces files (without obfuscate) in all packages.&ndash;&gt;-->
<!--                        <option>-keep interface * extends * { *; }</option>-->
<!--                        &lt;!&ndash; <option>-keep @org.springframework.stereotype.Service class *</option> &ndash;&gt;-->
<!--                        &lt;!&ndash; This option will save all original defined annotations in all class in all packages.&ndash;&gt;-->
<!--                        <option>-keepclassmembers class * {-->
<!--                            &lt;!&ndash; @org.springframework.beans.factory.annotation.Autowired *; &ndash;&gt;-->
<!--                            @org.springframework.beans.factory.annotation.Value *;-->
<!--                            }-->
<!--                        </option>-->
<!--                    </options>-->
<!--                    <libs>-->
<!--                        &lt;!&ndash; Include main JAVA library required.&ndash;&gt;-->
<!--                        <lib>${java.home}/lib/rt.jar</lib>-->
<!--                    </libs>-->
<!--                </configuration>-->
<!--                <dependencies>-->
<!--                    <dependency>-->
<!--                        <groupId>net.sf.proguard</groupId>-->
<!--                        <artifactId>proguard-base</artifactId>-->
<!--                        <version>6.2.2</version>-->
<!--                    </dependency>-->
<!--                </dependencies>-->
<!--            </plugin>-->
            <plugin>
                <groupId>io.github.extvos</groupId>
                <artifactId>restlet-maven-plugin</artifactId>
                <version>1.0.0-SNAPSHOT</version>
                <!--                <executions>-->
                <!--                    <execution>-->
                <!--                        <phase>compile</phase>-->
                <!--                        <goals>-->
                <!--                            <goal>gen</goal>-->
                <!--                        </goals>-->
                <!--                    </execution>-->
                <!--                </executions>-->
                <configuration>
                    <packages>
                        <package>
                            <source>io.github.extvos.example</source>
                            <prefix>/example</prefix>
                            <readOnly>true</readOnly>
                        </package>
                    </packages>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>2.4.4</version>
            </plugin>
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <version>4.0.0</version>
                <executions>
                    <execution>
                        <id>get-the-git-infos</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
                    <verbose>false</verbose>
                    <dateFormat>yyyy-MM-dd HH:mm:ss</dateFormat>
                    <prefix>git</prefix>
                    <generateGitPropertiesFile>true</generateGitPropertiesFile>
                    <generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties
                    </generateGitPropertiesFilename>
                    <format>json</format>
                    <gitDescribe>
                        <skip>false</skip>
                        <always>false</always>
                        <dirty>-dirty</dirty>
                    </gitDescribe>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
